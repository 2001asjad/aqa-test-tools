<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<!-- WAS benchmarks list for the XUL launcher.
	 This is combined with benchmarks.xml to produce a complete list. The list
	 is split into several separate files to make it easier to read / edit.
 -->
<benchmarks>
	<benchmark name="WebSphereWarmup" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc"></property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">process_size/footprint_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">2</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>1</iterations>
	</benchmark>
	<benchmark name="WebSphereFootprint" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="resultsFileName">process_size/footprint_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereFootprint" variant="WAS855_noSC">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xshareclasses':0,'-Xscmx':0,'-Xscmaxaot':0</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="resultsFileName">process_size/footprint_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereFootprintEE" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="FootprintEE" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/StartupFootprintEE/verbosegc_%pid.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/StartupFootprintEE/verbosejit_%pid.txt</property>
			<property name="resultsFileName">process_size/footprint_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>
		<staxscript resultTag="/scenario" funcName="was8_J2EE_scenario">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_footprint_jee.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereFootprintEE" variant="WAS855_noSC">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="FootprintEE" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xshareclasses':0,'-Xscmx':0,'-Xscmaxaot':0</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/StartupFootprintEE/verbosegc_%pid.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/StartupFootprintEE/verbosejit_%pid.txt</property>
			<property name="resultsFileName">process_size/footprint_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>
		<staxscript resultTag="/scenario" funcName="was8_J2EE_scenario">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_footprint_jee.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855_NoSec">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855_Xint">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xint':1</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855_NoSecXint">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xint':1</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855_2way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="2way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartup" variant="WAS855_noSC">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupDT" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xshareclasses':0,'-Xscmx':0,'-Xscmaxaot':0</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="ssmf_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_memory_footprint.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartupEE" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupEE" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/StartupFootprintEE/verbosegc_%pid.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="was8_J2EE_scenario">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_footprint_jee.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>
	<benchmark name="WebSphereStartupEE" variant="WAS855_noSC">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="StartupEE" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xshareclasses':0,'-Xscmx':0,'-Xscmaxaot':0</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/StartupFootprintEE/verbosegc_%pid.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">startup_time/startup_time_results.xml</property>
			<property name="iterations" desc_id="sufp_Runs">8</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="was8_J2EE_scenario">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/server_startup_memory_footprint/xml/server_startup_footprint_jee.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>	
	<benchmark name="WebSphereAppDeploy" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="AppDeploy" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">50</property>
			<property name="maxHeapSize">256</property>
			<property name="scenarioList">AppDeployBench.ear-AppDeployBench.py-2</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc"></property>
			<property name="-Xjit" desc_id="was_verbosejit"></property>
			<property name="resultsFileName">AppDeployBench.xml</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_appdeploy_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_appdeploy_bucket.xml</staxscript>
		<iterations>5</iterations>
	</benchmark>	
	<benchmark name="DayTrader30" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">false</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
    <benchmark name="DayTrader30" variant="WAS855gen1GB_4way_HCfull">
        <platforms/>
        <capabilities>
            <capability name="WAS855" type="product"/>
            <capability name="DayTrader30" type="config"/>
            <capability name="4way" type="affinity"/>
            <capability name="perffarm" />
        </capabilities>
        <properties>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
            <property name="recordedRuns" desc_id="dt_recRuns">3</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">5</property>
            <property name="recordedDuration" desc_id="dt_recD">60</property>
            <property name="warmupDuration" desc_id="dt_warmD">60</property>
            <property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
            <property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
            <property name="JDKOptions" desc_id="was_jdkoptions">,'-Ddummy':'dummy -Djava.endorsed.dirs=/java/opt/IBM/WAS855_64bit/endorsed_apis:/java/perffarm/sdks/../80endorsed'</property>
            <property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
            <property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">,'-Xhealthcenter':'level=full'</property>
			<property name="buildJDKOpts" hidden="true" bits="32">,'-Xhealthcenter':'level=full'</property>
			<property name="buildJDKOpts" hidden="true" bits="31">,'-Xhealthcenter':'level=full'</property>
            <property name="clearSharedClasses" desc_id="was_clearsc">false</property>
            <property name="warmRunsPerCold">1</property>
            <!-- This syntax allows defaults to be set dependent on bitcount -->
            <property name="compressedRefs" bits="64">true</property>
            <property name="compressedRefs" bits="32">false</property>
            <property name="environment" desc_id="was_env"></property>
            <property name="resultsFileName">processed_results.xml</property>
            <property name="getStats">true</property>
        </properties>	
        <staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
        <iterations>6</iterations>
    </benchmark>
    <benchmark name="DayTrader30" variant="WAS855gen1GB_4way_HCoff">
        <platforms/>
        <capabilities>
            <capability name="WAS855" type="product"/>
            <capability name="DayTrader30" type="config"/>
            <capability name="4way" type="affinity"/>
            <capability name="perffarm" />
        </capabilities>
        <properties>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
            <property name="recordedRuns" desc_id="dt_recRuns">3</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">5</property>
            <property name="recordedDuration" desc_id="dt_recD">60</property>
            <property name="warmupDuration" desc_id="dt_warmD">60</property>
            <property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
            <property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
            <property name="JDKOptions" desc_id="was_jdkoptions">,'-Ddummy':'dummy -Djava.endorsed.dirs=/java/opt/IBM/WAS855_64bit/endorsed_apis:/java/perffarm/sdks/../80endorsed'</property>
            <property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
            <property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">,'-Xhealthcenter':'level=off'</property>
			<property name="buildJDKOpts" hidden="true" bits="32">,'-Xhealthcenter':'level=off'</property>
			<property name="buildJDKOpts" hidden="true" bits="31">,'-Xhealthcenter':'level=off'</property>
            <property name="clearSharedClasses" desc_id="was_clearsc">false</property>
            <property name="warmRunsPerCold">1</property>
            <!-- This syntax allows defaults to be set dependent on bitcount -->
            <property name="compressedRefs" bits="64">true</property>
            <property name="compressedRefs" bits="32">false</property>
            <property name="environment" desc_id="was_env"></property>
            <property name="resultsFileName">processed_results.xml</property>
            <property name="getStats">true</property>
        </properties>	
        <staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
        <iterations>6</iterations>
    </benchmark>
    <benchmark name="DayTrader30" variant="WAS855gen1GB_4way_HCheadless">
        <platforms/>
        <capabilities>
            <capability name="WAS855" type="product"/>
            <capability name="DayTrader30" type="config"/>
            <capability name="4way" type="affinity"/>
            <capability name="perffarm" />
        </capabilities>
        <properties>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
            <property name="recordedRuns" desc_id="dt_recRuns">3</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">5</property>
            <property name="recordedDuration" desc_id="dt_recD">60</property>
            <property name="warmupDuration" desc_id="dt_warmD">60</property>
            <property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
            <property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
            <property name="JDKOptions" desc_id="was_jdkoptions">,'-Ddummy':'dummy -Djava.endorsed.dirs=/java/opt/IBM/WAS855_64bit/endorsed_apis:/java/perffarm/sdks/../80endorsed'</property>
            <property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
            <property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">,'-Xhealthcenter':'level=headless'</property>
			<property name="buildJDKOpts" hidden="true" bits="32">,'-Xhealthcenter':'level=headless'</property>
			<property name="buildJDKOpts" hidden="true" bits="31">,'-Xhealthcenter':'level=headless'</property>
            <property name="clearSharedClasses" desc_id="was_clearsc">false</property>
            <property name="warmRunsPerCold">1</property>
            <!-- This syntax allows defaults to be set dependent on bitcount -->
            <property name="compressedRefs" bits="64">true</property>
            <property name="compressedRefs" bits="32">false</property>
            <property name="environment" desc_id="was_env"></property>
            <property name="resultsFileName">processed_results.xml</property>
            <property name="getStats">true</property>
        </properties>	
        <staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
        <iterations>6</iterations>
    </benchmark>
    <benchmark name="DayTrader30" variant="WAS855gen1GB_4way_HCheadless10m">
        <platforms/>
        <capabilities>
            <capability name="WAS855" type="product"/>
            <capability name="DayTrader30" type="config"/>
            <capability name="4way" type="affinity"/>
            <capability name="perffarm" />
        </capabilities>
        <properties>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
            <property name="recordedRuns" desc_id="dt_recRuns">1</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">0</property>
            <property name="recordedDuration" desc_id="dt_recD">600</property>
            <property name="warmupDuration" desc_id="dt_warmD">60</property>
            <property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
            <property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
            <property name="JDKOptions" desc_id="was_jdkoptions">,'-Ddummy':'dummy -Djava.endorsed.dirs=/java/opt/IBM/WAS855_64bit/endorsed_apis:/java/perffarm/sdks/../80endorsed'</property>
            <property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
            <property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">,'-Xhealthcenter':'level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3'</property>
			<property name="buildJDKOpts" hidden="true" bits="32">,'-Xhealthcenter':'level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3'</property>
			<property name="buildJDKOpts" hidden="true" bits="31">,'-Xhealthcenter':'level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3'</property>
            <property name="clearSharedClasses" desc_id="was_clearsc">false</property>
            <property name="warmRunsPerCold">1</property>
            <!-- This syntax allows defaults to be set dependent on bitcount -->
            <property name="compressedRefs" bits="64">true</property>
            <property name="compressedRefs" bits="32">false</property>
            <property name="environment" desc_id="was_env"></property>
            <property name="resultsFileName">processed_results.xml</property>
            <property name="getStats">true</property>
        </properties>	
        <staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
        <iterations>6</iterations>
    </benchmark>
    <benchmark name="zDayTrader3" variant="zWAS855-HCfull">
        <platforms/>
        <capabilities>
            <capability name="zWAS855" type="product"/>
            <capability name="zDayTrader" type="config"/>
        </capabilities>
        <properties>
            <property name="allRunsClean">false</property>
            <property name="warmRunsPerClean">1</property>
            <property name="recordedRuns" desc_id="dt_recRuns">2</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">6</property>
            <property name="recordedDuration" desc_id="dt_recD">180</property>
            <property name="warmupDuration" desc_id="dt_warmD">90</property>
            <property name="dropDataStart">25</property>
            <property name="dropDataEnd">5</property>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="JDKOptions">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xlp -Xcompressedrefs</property>
            <property name="JITOptions">-Xjit:verbose={compile*},vlog=${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">-Xhealthcenter:level=full</property>
			<property name="buildJDKOpts" hidden="true" bits="32">-Xhealthcenter:level=full</property>
			<property name="buildJDKOpts" hidden="true" bits="31">-Xhealthcenter:level=full</property>
            <property name="GCOptions">-Xverbosegclog:${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosegc_%pid.xml</property>
            <property name="environment"></property>
            <property name="script">daytrader.sh.ebcdic</property>
            <property name="timeout">2400000</property>
            <property name="resultTag">/scenario</property>
        </properties>
        <iterations>4</iterations>
    </benchmark>
    <benchmark name="zDayTrader3" variant="zWAS855-HCoff">
        <platforms/>
        <capabilities>
            <capability name="zWAS855" type="product"/>
            <capability name="zDayTrader" type="config"/>
        </capabilities>
        <properties>
            <property name="allRunsClean">false</property>
            <property name="warmRunsPerClean">1</property>
            <property name="recordedRuns" desc_id="dt_recRuns">2</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">6</property>
            <property name="recordedDuration" desc_id="dt_recD">180</property>
            <property name="warmupDuration" desc_id="dt_warmD">90</property>
            <property name="dropDataStart">25</property>
            <property name="dropDataEnd">5</property>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="JDKOptions">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xlp -Xcompressedrefs</property>
            <property name="JITOptions">-Xjit:verbose={compile*},vlog=${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">-Xhealthcenter:level=off</property>
			<property name="buildJDKOpts" hidden="true" bits="32">-Xhealthcenter:level=off</property>
			<property name="buildJDKOpts" hidden="true" bits="31">-Xhealthcenter:level=off</property>
            <property name="GCOptions">-Xverbosegclog:${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosegc_%pid.xml</property>
            <property name="environment"></property>
            <property name="script">daytrader.sh.ebcdic</property>
            <property name="timeout">2400000</property>
            <property name="resultTag">/scenario</property>
        </properties>
        <iterations>4</iterations>
    </benchmark>
    <benchmark name="zDayTrader3" variant="zWAS855-HCheadless">
        <platforms/>
        <capabilities>
            <capability name="zWAS855" type="product"/>
            <capability name="zDayTrader" type="config"/>
        </capabilities>
        <properties>
            <property name="allRunsClean">false</property>
            <property name="warmRunsPerClean">1</property>
            <property name="recordedRuns" desc_id="dt_recRuns">2</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">6</property>
            <property name="recordedDuration" desc_id="dt_recD">180</property>
            <property name="warmupDuration" desc_id="dt_warmD">90</property>
            <property name="dropDataStart">25</property>
            <property name="dropDataEnd">5</property>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="JDKOptions">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xlp -Xcompressedrefs</property>
            <property name="JITOptions">-Xjit:verbose={compile*},vlog=${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">-Xhealthcenter:level=headless</property>
			<property name="buildJDKOpts" hidden="true" bits="32">-Xhealthcenter:level=headless</property>
			<property name="buildJDKOpts" hidden="true" bits="31">-Xhealthcenter:level=headless</property>
            <property name="GCOptions">-Xverbosegclog:${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosegc_%pid.xml</property>
            <property name="environment"></property>
            <property name="script">daytrader.sh.ebcdic</property>
            <property name="timeout">2400000</property>
            <property name="resultTag">/scenario</property>
        </properties>
        <iterations>4</iterations>
    </benchmark>
    <benchmark name="zDayTrader3" variant="zWAS855-HCheadless10m">
        <platforms/>
        <capabilities>
            <capability name="zWAS855" type="product"/>
            <capability name="zDayTrader" type="config"/>
        </capabilities>
        <properties>
            <property name="allRunsClean">false</property>
            <property name="warmRunsPerClean">1</property>
            <property name="recordedRuns" desc_id="dt_recRuns">1</property>
            <property name="warmupRuns" desc_id="dt_warmRuns">0</property>
            <property name="recordedDuration" desc_id="dt_recD">600</property>
            <property name="warmupDuration" desc_id="dt_warmD">90</property>
            <property name="dropDataStart">25</property>
            <property name="dropDataEnd">5</property>
            <property name="minHeapSize">1024</property>
            <property name="maxHeapSize">1024</property>
            <property name="JDKOptions">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xlp -Xcompressedrefs</property>
            <property name="JITOptions">-Xjit:verbose={compile*},vlog=${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosejit.txt</property>
			<property name="baselineJDKOpts" hidden="true" bits="64"></property>
			<property name="baselineJDKOpts" hidden="true" bits="32"></property>
			<property name="baselineJDKOpts" hidden="true" bits="31"></property>
			<property name="buildJDKOpts" hidden="true" bits="64">-Xhealthcenter:level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3</property>
			<property name="buildJDKOpts" hidden="true" bits="32">-Xhealthcenter:level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3</property>
			<property name="buildJDKOpts" hidden="true" bits="31">-Xhealthcenter:level=headless -Dcom.ibm.java.diagnostics.healthcenter.headless.run.duration=3</property>
            <property name="GCOptions">-Xverbosegclog:${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosegc_%pid.xml</property>
            <property name="environment"></property>
            <property name="script">daytrader.sh.ebcdic</property>
            <property name="timeout">2400000</property>
            <property name="resultTag">/scenario</property>
        </properties>
        <iterations>4</iterations>
    </benchmark>
	<benchmark name="DayTrader30JDBC" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeJDBC&#45;9080&#45;50&#45;1&#45;daytrader3</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">false</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="DayTrader30" variant="WAS855gen1GB_4way_sec">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30_sec" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>3</iterations>
	</benchmark>
	<benchmark name="DayTrader20" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader20" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader20/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">false</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="DayTrader20" variant="WAS855gen1GB_4way_sec">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader20_sec" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeJDBCSync&#45;9080&#45;50&#45;1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader20/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">false</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">false</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
	
	<benchmark name="DayTrader30" variant="WAS855gen1GB_8way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader30" type="config"/>
			<capability name="8way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1&#45;daytrader3</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
<!-- Note: DayTrader quote count is hard-coded as 10k in daytrader3.jxs and STAX does not override it, this only affects the DT3 app config -->
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTrader30/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTrader30/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>3</iterations>
	</benchmark>
		<benchmark name="DayTrader12" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTrader12" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="logVerboseGC" desc_id="was_verbosegc">true</property>
			<property name="logVerboseJIT" desc_id="was_verbosejit">true</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="DayTraderEE" variant="WAS855gen10G_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="DayTraderEE" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">TradeEJBSync&#45;9080&#45;50&#45;1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="daytraderUserCount" desc_id="dt_warmD">15000</property>
			<property name="daytraderQuoteCount" desc_id="dt_warmD">10000</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/DayTraderEE/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/DayTraderEE/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">false</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_EE_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_2way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="2way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_100k100k" variant="WAS855gen1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa5_bean_100k_100k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_100k100k" variant="WAS855gen1GB_4way_RM">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">rm</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">10</property>
			<property name="Payload">soa5_bean_100k_100k.xml</property>
			<property name="LoadDriverType">thinclient</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">1</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">0</property>
			<property name="recordedDuration" desc_id="dt_recD">180</property>
			<property name="warmupDuration" desc_id="dt_warmD">0</property>
			<property name="clientWarmupTime" desc_id="soa_clientWarm">300</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855opt1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xgcpolicy':'optthruput'</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_noSC_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions">,'-Xshareclasses':0,'-Xscmx':0,'-Xscmaxaot':0</property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_6way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="6way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_8way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="8way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_10way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="10way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="SOABench_10k10k" variant="WAS855gen1GB_12way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="SOABench" type="config"/>
			<capability name="12way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="QoS">base</property>
			<property name="Synchronicity">synchronous</property>
			<property name="Clients">50</property>
			<property name="Payload">soa4_bean_10k_10k.xml</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/SOABench/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/SOABench/verbosejit.txt</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="soa_recRuns">3</property>
			<property name="warmupRuns" desc_id="soa_warmRuns">4</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_soabench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_soabench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Array" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Array.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_BigArrayListWithDoubles" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_BigArrayListWithDoubles.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Collections" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Collections.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
		</benchmark>
		<benchmark name="WASORBBench_CustomMarshall" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_CustomMarshall.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_DistinctObjectsList" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_DistinctObjectsList.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_MetaTest1" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_MetaTest1.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_MetaTest2" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_MetaTest2.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Nested" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Nested.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NestedCustom" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NestedCustom.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NestedTestObject" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NestedTestObject.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NonCustomHelperUsage" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NonCustomHelperUsage.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NonCustomMarshall" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NonCustomMarshall.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Vector-Any" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_VectorAny.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_BillPayment" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_BillPayment.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_AccountTransactionHistory" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_AccountTransactionHistory.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_CreditCardPayment" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_CreditCardPayment.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_DomainDummyObject" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_DomainDummyObject.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_DoubleDimentionDummyObject" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_DoubleDimentionDummyObject.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_FundTransfer" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_VectorAny.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_PayAnyOne" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_PayAnyOne.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_ViewBalanceSummary" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_ViewBalanceSummary.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_PlainDummyObject" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb2</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_PlainDummyObject.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>

<benchmark name="WASORBBench_Array_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Array.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_BigArrayListWithDoubles_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_BigArrayListWithDoubles.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Collections_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Collections.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
		</benchmark>
		<benchmark name="WASORBBench_CustomMarshall_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_CustomMarshall.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_DistinctObjectsList_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_DistinctObjectsList.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_MetaTest1_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_MetaTest1.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_MetaTest2_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_MetaTest2.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Nested_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_Nested.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NestedCustom_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NestedCustom.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NestedTestObject_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NestedTestObject.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NonCustomHelperUsage_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NonCustomHelperUsage.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_NonCustomMarshall_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_NonCustomMarshall.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>
	<benchmark name="WASORBBench_Vector-Any_ejb3" variant="WAS855">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="WASORBBench" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="ejbType">ejb3</property>
			<property name="protocolType">iiop</property>
			<property name="Clients">50</property>
			<property name="Payload">PingORB_VectorAny.jxs</property>
			<property name="LoadDriverType">jibe</property>
			<property name="minHeapSize">5120</property>
			<property name="maxHeapSize">5120</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="-Xverbosegclog" desc_id="was_verbosegc">../logs/server1/verbosegc.xml</property>
			<property name="-Xjit" desc_id="was_verbosejit">verbose={compile*},disableSuffixLogs,vlog=../logs/server1/verbosejit.txt</property>
			<property name="environment" desc_id="was_env"></property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="recordedRuns" desc_id="orb_recRuns">3</property>
			<property name="warmupRuns" desc_id="orb_warmRuns">4</property>
			<property name="recordedDuration" desc_id="orb_recD">100</property>
			<property name="warmupDuration" desc_id="orb_warmD">100</property>
			<property name="resultsFileName">processed_results.xml</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_orbbench_bucket_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_orbbench_bucket.xml</staxscript>
		<iterations>6</iterations>
	</benchmark>

        <benchmark name="zWAS_SuFp" variant="1SR_NoSec">
                <platforms/>
                <capabilities>
                        <capability name="zWAS80" type="product"/>
                        <capability name="1SR_NoSec" type="config"/>
                </capabilities>
                <properties>
                        <property name="JDKOptions" bits="64">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xcompressedrefs</property>
                        <property name="JDKOptions" bits="31">-Dcom.ibm.CORBA.UseSchemaIDR=false</property>
                        <property name="setsPerJob">1</property>
                        <property name="runsPerSet">6</property>
                        <property name="timeout">1800000</property>
                        <property name="scriptArgs">-d -v</property>
                        <property name="resultTag">Servant_Real_Storage%All runs completed successfully</property>
                </properties>
                <iterations>6</iterations>
        </benchmark>
        <benchmark name="zWAS_SuFp" variant="1SR_AdminSec">
                <platforms/>
                <capabilities>
                        <capability name="zWAS80" type="product"/>
                        <capability name="1SR_AdminSec" type="config"/>
                </capabilities>
                <properties>
                        <property name="JDKOptions" bits="64">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xcompressedrefs</property>
                        <property name="JDKOptions" bits="31">-Dcom.ibm.CORBA.UseSchemaIDR=false</property>
                        <property name="setsPerJob">1</property>
                        <property name="runsPerSet">6</property>
                        <property name="timeout">1800000</property>
                        <property name="scriptArgs">-d -v</property>
                        <property name="resultTag">Servant_Real_Storage%All runs completed successfully</property>
                </properties>
                <iterations>6</iterations>
        </benchmark>
	<benchmark name="zStartupDT" variant="zWAS855">
		<platforms/>
		<capabilities>
			<capability name="zWAS855" type="product"/>
			<capability name="zStartupDT" type="config"/>
		</capabilities>
		<properties>
                        <property name="JDKOptions" bits="64">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xcompressedrefs</property>
                        <property name="JDKOptions" bits="31">-Dcom.ibm.CORBA.UseSchemaIDR=false</property>
			<property name="environment"></property>
			<property name="setsPerJob">1</property>
			<property name="runsPerSet">6</property>
			<property name="timeout">1800000</property>
			<property name="scriptArgs">-d -v</property>
			<property name="resultTag">Servant_Real_Storage%All runs completed successfully</property>
		</properties>
		<iterations>3</iterations>
	</benchmark>
	<benchmark name="zStartupDT_noSC" variant="zWAS855">
		<platforms/>
		<capabilities>
			<capability name="zWAS855" type="product"/>
			<capability name="zStartupDT_noSC" type="config"/>
		</capabilities>
		<properties>
                        <property name="JDKOptions" bits="64">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xcompressedrefs</property>
                        <property name="JDKOptions" bits="31">-Dcom.ibm.CORBA.UseSchemaIDR=false</property>
			<property name="environment"></property>
			<property name="setsPerJob">1</property>
			<property name="runsPerSet">6</property>
			<property name="timeout">1800000</property>
			<property name="scriptArgs">-d -v</property>
			<property name="resultTag">Servant_Real_Storage%All runs completed successfully</property>
		</properties>
		<iterations>3</iterations>
	</benchmark>	
	<benchmark name="zDayTrader3" variant="zWAS855">
		<platforms/>
		<capabilities>
			<capability name="zWAS855" type="product"/>
			<capability name="zDayTrader" type="config"/>
		</capabilities>
		<properties>
			<property name="allRunsClean">false</property>
			<property name="warmRunsPerClean">1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">2</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">6</property>
			<property name="recordedDuration" desc_id="dt_recD">180</property>
			<property name="warmupDuration" desc_id="dt_warmD">90</property>
			<property name="dropDataStart">25</property>
			<property name="dropDataEnd">5</property>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="JDKOptions">-Dcom.ibm.CORBA.UseSchemaIDR=false -Xlp -Xcompressedrefs</property>
			<property name="JITOptions">-Xjit:verbose={compile*},vlog=${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosejit.txt</property>
			<property name="GCOptions">-Xverbosegclog:${//capability[@name="zWAS855"]/property[@name='scriptDir']}/verboselogs/verbosegc_%pid.xml</property>
			<property name="environment"></property>
			<property name="script">daytrader.sh.ebcdic</property>
			<property name="timeout">2400000</property>
			<property name="resultTag">/scenario</property>
		</properties>
		<iterations>4</iterations>
	</benchmark>
	
	<benchmark name="PingServlet" variant="WAS855opt1GB_4way">
		<platforms/>
		<capabilities>
			<capability name="WAS855" type="product"/>
			<capability name="PingServlet" type="config"/>
			<capability name="4way" type="affinity"/>
			<capability name="perffarm" />
		</capabilities>
		<properties>
			<property name="minHeapSize">1024</property>
			<property name="maxHeapSize">1024</property>
			<property name="scenarioList" desc_id="dt_scenario">PingServlet&#45;9080&#45;20&#45;1</property>
			<property name="recordedRuns" desc_id="dt_recRuns">3</property>
			<property name="warmupRuns" desc_id="dt_warmRuns">5</property>
			<property name="recordedDuration" desc_id="dt_recD">60</property>
			<property name="warmupDuration" desc_id="dt_warmD">60</property>
			<property name="JDKOptions" desc_id="was_jdkoptions"></property>
			<property name="logVerboseGC" desc_id="was_verbosegc">true</property>
			<property name="logVerboseJIT" desc_id="was_verbosejit">true</property>
			<property name="clearSharedClasses" desc_id="was_clearsc">true</property>
			<property name="warmRunsPerCold">1</property>
			<!-- This syntax allows defaults to be set dependent on bitcount -->
			<property name="compressedRefs" bits="64">true</property>
			<property name="compressedRefs" bits="32">false</property>
			<property name="environment" desc_id="was_env"></property>
			<property name="resultsFileName">processed_results.xml</property>
			<property name="getStats">true</property>
		</properties>	
		<staxscript resultTag="/scenario" funcName="patrol_daytrader_bucket_legacy_main">${//capability[@name='perffarm']/property[@name='wasperfauto_version']}/patrol_team/xml/patrol_classic_ui_daytrader_bucket.xml</staxscript>	
		<iterations>6</iterations>
	</benchmark>
</benchmarks>
